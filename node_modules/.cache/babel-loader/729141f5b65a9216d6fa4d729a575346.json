{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Escolar\\\\Programas\\\\Distributed Database\\\\Proyecto Parcial1\\\\ReactJS\\\\tt\\\\src\\\\components\\\\ProfesorEvaluacion.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../button.css';\n\nclass ProfesorEvaluacion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderProtocolos = ({\n      Nombre,\n      URL\n    }) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, Nombre), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: URL,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, URL)));\n\n    this.state = {\n      profesor: this.props.profesor,\n      protocolo: localStorage.getItem(\"protocolo\"),\n      info: []\n    };\n    this.aprobar = this.aprobar.bind(this);\n  }\n\n  componentDidMount() {\n    this.getInfo();\n  }\n\n  async getInfo() {\n    const response = await fetch(\"http://localhost:4000/InfoProtocolo\", {\n      method: \"post\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        protocolo: this.state.protocolo\n      })\n    }).catch(err => console.error(err));\n    const json = await response.json();\n    this.setState({\n      info: json.data\n    });\n  }\n\n  async aprobar(event) {\n    const response = await fetch(\"http://localhost:4000/ProtocoloEvaluado\", {\n      method: \"post\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        protocolo: this.state.protocolo,\n        calificacion: \"Aprobado\",\n        profesor: this.state.profesor\n      })\n    }).catch(err => console.error(err));\n    const json = await response.json();\n\n    if (json == 1) {\n      alert(\"Protocolo calificado correctamente!\");\n    } else {\n      alert(\"Algo saliÃ³ mal\");\n    }\n  }\n\n  render() {\n    if (!localStorage.getItem(\"protocolo\")) {\n      window.location.href = \"/Profesor\";\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Informaci\\xF3n del Protocolo\"), \"asdasd\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"tabla\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"NombreTT\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"URL a documento PDF\")), this.state.info.map(this.renderProtocolos))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"myButton\",\n        onClick: this.aprobar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"APROBAR\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"myButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"RECHAZAR\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default ProfesorEvaluacion;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Escolar/Programas/Distributed Database/Proyecto Parcial1/ReactJS/tt/src/components/ProfesorEvaluacion.js"],"names":["React","Link","ProfesorEvaluacion","Component","constructor","props","renderProtocolos","Nombre","URL","state","profesor","protocolo","localStorage","getItem","info","aprobar","bind","componentDidMount","getInfo","response","fetch","method","headers","body","JSON","stringify","catch","err","console","error","json","setState","data","event","calificacion","alert","render","window","location","href","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../button.css'\r\n\r\nclass ProfesorEvaluacion extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profesor: this.props.profesor,\r\n            protocolo: localStorage.getItem(\"protocolo\"),\r\n            info: []\r\n        }\r\n        this.aprobar=this.aprobar.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    async getInfo() {\r\n        const response = await fetch(\"http://localhost:4000/InfoProtocolo\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                protocolo: this.state.protocolo,\r\n            })\r\n        })\r\n            .catch(err => console.error(err))\r\n        const json = await response.json();\r\n        this.setState({ info: json.data })\r\n\r\n    }\r\n\r\n    renderProtocolos = ({ Nombre, URL }) =>\r\n        <tr>\r\n            <td>\r\n                {Nombre}\r\n            </td>\r\n            <td>\r\n                <a href={URL} target=\"_blank\">{URL}</a>\r\n            </td>\r\n        </tr>\r\n\r\n    async aprobar(event) {\r\n        const response = await fetch(\"http://localhost:4000/ProtocoloEvaluado\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                protocolo: this.state.protocolo,\r\n                calificacion: \"Aprobado\",\r\n                profesor: this.state.profesor\r\n            })\r\n        })\r\n            .catch(err => console.error(err))\r\n        const json = await response.json();\r\n        if (json == 1) {\r\n            alert(\"Protocolo calificado correctamente!\")\r\n        }\r\n        else{\r\n            alert(\"Algo saliÃ³ mal\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.getItem(\"protocolo\")) {\r\n            window.location.href = \"/Profesor\"\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h1>InformaciÃ³n del Protocolo</h1>\r\n                    asdasd\r\n                    <br />\r\n                    <div className=\"container\">\r\n                        <div>\r\n                            <table className=\"tabla\" align=\"center\">\r\n                                <tr>\r\n                                    <th>NombreTT</th>\r\n                                    <th>URL a documento PDF</th>\r\n                                </tr>\r\n                                {this.state.info.map(this.renderProtocolos)}\r\n                            </table>\r\n                        </div><br />\r\n                        <button className=\"myButton\" onClick={this.aprobar}>APROBAR</button><br /><br />\r\n                        <button className=\"myButton\" >RECHAZAR</button><br /><br />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default ProfesorEvaluacion"]},"metadata":{},"sourceType":"module"}