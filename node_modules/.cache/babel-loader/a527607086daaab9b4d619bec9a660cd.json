{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Escolar\\\\Programas\\\\Distributed Database\\\\Proyecto Parcial1\\\\ReactJS\\\\tt\\\\src\\\\components\\\\PalabrasClave.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport '../myButton2.css';\n\nclass PalabrasClave extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      protocolo: this.props.protocolo,\n      cont: 1,\n      palabras: []\n    };\n    this.añadePalabra = this.añadePalabra.bind(this);\n    this.finalizar = this.finalizar.bind(this);\n  }\n\n  finalizar() {\n    var arrayaux = [];\n    var a = d3.select(\"div.palabras\").selectAll(\"input\").each(function () {\n      arrayaux.push(d3.select(this).property(\"value\"));\n    });\n    this.setState({\n      palabras: arrayaux\n    });\n  }\n\n  componentDidUpdate() {\n    this.subirpalabras();\n  }\n\n  async subirpalabras() {\n    for (var i = 0; i < this.state.palabras.length; i++) {\n      const response = await fetch(\"http://192.168.0.18:4000/AgregaPalabrasClave\", {\n        method: \"post\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          protocolo: this.state.protocolo,\n          palabra: this.state.palabras[i]\n        })\n      }).catch(err => console.error(err));\n      const json = await response.json();\n\n      if (json.data == 0) {\n        alert(\"Una de las palabras ya fue registrada!...\");\n        window.location.href = \"/Alumno/Bienvenido/Actualiza/Palabras\";\n        return 0;\n      }\n    }\n\n    alert(\"Palabras agregadas exitosamente!\");\n    window.location.href = \"/Alumno/Bienvenido\";\n  }\n\n  añadePalabra() {\n    this.setState({\n      cont: this.state.cont + 1\n    });\n    d3.select(\"div.palabras\").append(\"input\").attr(\"classname\", \"palabra\").attr(\"type\", \"text\").attr(\"placeHolder\", \"            Palabra clave \" + (this.state.cont + 1));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButton2\",\n      onClick: this.añadePalabra,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"A\\xF1adir Palabra Clave\"), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButton2\",\n      onClick: this.finalizar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Finalizar\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"palabras\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"palabrasClave\",\n      placeholder: \"            Palabra clave 1\",\n      className: \"palabra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default PalabrasClave;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Escolar/Programas/Distributed Database/Proyecto Parcial1/ReactJS/tt/src/components/PalabrasClave.js"],"names":["React","d3","PalabrasClave","Component","constructor","props","state","protocolo","cont","palabras","añadePalabra","bind","finalizar","arrayaux","a","select","selectAll","each","push","property","setState","componentDidUpdate","subirpalabras","i","length","response","fetch","method","headers","body","JSON","stringify","palabra","catch","err","console","error","json","data","alert","window","location","href","append","attr","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport * as d3 from 'd3'\r\nimport '../myButton2.css'\r\n\r\nclass PalabrasClave extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            protocolo: this.props.protocolo,\r\n            cont: 1,\r\n            palabras: []\r\n        }\r\n        this.añadePalabra = this.añadePalabra.bind(this);\r\n        this.finalizar = this.finalizar.bind(this)\r\n    }\r\n\r\n    finalizar() {\r\n        var arrayaux = []\r\n        var a = d3.select(\"div.palabras\").selectAll(\"input\").each(function () {\r\n            arrayaux.push(d3.select(this).property(\"value\"))\r\n        })\r\n        this.setState({ palabras: arrayaux })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.subirpalabras()\r\n    }\r\n\r\n    async subirpalabras() {\r\n        for (var i = 0; i < this.state.palabras.length; i++) {\r\n            const response = await fetch(\"http://192.168.0.18:4000/AgregaPalabrasClave\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    protocolo: this.state.protocolo,\r\n                    palabra:this.state.palabras[i]\r\n                })\r\n            })\r\n                .catch(err => console.error(err))\r\n            const json = await response.json();\r\n            if(json.data==0){\r\n                alert(\"Una de las palabras ya fue registrada!...\")\r\n                window.location.href=\"/Alumno/Bienvenido/Actualiza/Palabras\"\r\n                return 0\r\n            }\r\n        }\r\n        alert(\"Palabras agregadas exitosamente!\")\r\n        window.location.href=\"/Alumno/Bienvenido\"\r\n    }\r\n\r\n    añadePalabra() {\r\n        this.setState({ cont: this.state.cont + 1 })\r\n        d3.select(\"div.palabras\")\r\n            .append(\"input\")\r\n            .attr(\"classname\", \"palabra\")\r\n            .attr(\"type\", \"text\")\r\n            .attr(\"placeHolder\", \"            Palabra clave \" + ((this.state.cont) + 1));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"myButton2\" onClick={this.añadePalabra}>Añadir Palabra Clave</button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button className=\"myButton2\" onClick={this.finalizar}>Finalizar</button>\r\n                <div className=\"palabras\">\r\n                    <input type='palabrasClave'\r\n                        placeholder='            Palabra clave 1'\r\n                        className=\"palabra\" />\r\n                </div>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PalabrasClave"]},"metadata":{},"sourceType":"module"}